name: Create S3 Static Site 

on:
  issues:
    type: 
      - opened

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'front')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # - name: Create S3 bucket
      #   run: |
      #     aws s3api create-bucket --bucket my-static-site-bucket --region us-east-1 --create-bucket-configuration LocationConstraint=us-east-1

      # - name: Enable static website hosting
      #   run: |
      #     aws s3 website s3://my-static-site-bucket/ --index-document index.html --error-document error.html

      # - name: Upload files to S3 bucket
      #   run: |
      #     aws s3 sync . s3://my-static-site-bucket/ --exclude ".git/*" --exclude ".github/*"

      - name: Extract Bucket Name from Issue
        run: |
          export BUCKET_NAME=$(echo "${{ github.event.issue.title }}")
          echo "Bucket Name: $BUCKET_NAME"
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV

      - name: Run Terraform
        run: |
          cd terraform
          cd s3-bucket-static
          terraform init
          terraform apply -auto-approve -var="bucket_name=${{ env.BUCKET_NAME }}"

      - name: Add comment
        run: gh issue comment "$NUMBER" --repo "$REPO" --body "$BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
          BODY: >
            O bucket S3 foi criado com sucesso! 🎉

